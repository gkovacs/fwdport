#!/usr/bin/env node
// Generated by LiveScript 1.5.0
(function(){
  var fs, os, path, yamlfile, execSync, homedir, slice$ = [].slice;
  fs = require('fs');
  os = require('os');
  path = require('path');
  yamlfile = require('yamlfile');
  execSync = require('child_process').execSync;
  homedir = os.homedir();
  (function(){
    var config_file_path, config_data, host, ports_to_forward, i$, ref$, len$, x, portnum, ssh_command;
    config_file_path = path.join(homedir, '.fwdport.yaml');
    if (!fs.existsSync(config_file_path)) {
      console.log('need file ' + config_file_path);
      return;
    }
    config_data = yamlfile.readFileSync(config_file_path);
    if (config_data == null) {
      console.log('file ' + config_file_path + ' is not a valid YAML or JSON file');
      return;
    }
    host = config_data.host;
    if (host == null) {
      console.log('file ' + config_file_path + ' is missing field "host"');
      return;
    }
    ports_to_forward = [];
    for (i$ = 0, len$ = (ref$ = slice$.call(process.argv, 2)).length; i$ < len$; ++i$) {
      x = ref$[i$];
      portnum = parseInt(x);
      if (isNaN(portnum)) {
        console.log('arguments must be integers (the ports to forward)');
        console.log('received arguments:');
        console.log(process.argv);
        console.log('expected arguments (example):');
        console.log([process.argv[0], '8080', '5000'].join(' '));
        return;
      }
      ports_to_forward.push(portnum);
    }
    ssh_command = "ssh " + (function(){
      var i$, ref$, len$, results$ = [];
      for (i$ = 0, len$ = (ref$ = ports_to_forward).length; i$ < len$; ++i$) {
        portnum = ref$[i$];
        results$.push("-L " + portnum + ":localhost:" + portnum);
      }
      return results$;
    }()).join(' ') + " " + host;
    console.log(ssh_command);
    return execSync(ssh_command, {
      stdio: 'inherit'
    });
  })();
}).call(this);
